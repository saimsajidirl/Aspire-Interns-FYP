{% extends 'base.html' %}

{% block title %}Aspire Interns{% endblock %}

{% block content %}

<section id="about" class="py-16 bg-gray-100">
    <div class="container mx-auto px-6 md:px-16 text-center">
        <h2 class="text-4xl font-bold mb-6 text-gray-800">About Aspire Interns</h2>
        <p class="text-lg text-gray-600 mb-8 max-w-3xl mx-auto">
            At Aspire Interns, our mission is to bridge the gap between education and industry by providing meaningful opportunities 
            for students and young professionals to kickstart their careers. We are dedicated to nurturing talent, fostering innovation, 
            and building a global community of aspiring leaders.
        </p>
        <div class="grid md:grid-cols-3 gap-8">
            <div class="bg-white rounded-xl shadow-lg p-6 hover:shadow-2xl transition">
                <h3 class="text-xl font-semibold text-blue-600 mb-4">Our Mission</h3>
                <p class="text-gray-600">
                    Empower young professionals with the tools and experiences they need to excel in their chosen fields.
                </p>
            </div>
            <div class="bg-white rounded-xl shadow-lg p-6 hover:shadow-2xl transition">
                <h3 class="text-xl font-semibold text-green-600 mb-4">Our Vision</h3>
                <p class="text-gray-600">
                    To be the leading global platform for career development, offering equal opportunities for everyone.
                </p>
            </div>
            <div class="bg-white rounded-xl shadow-lg p-6 hover:shadow-2xl transition">
                <h3 class="text-xl font-semibold text-purple-600 mb-4">Our Values</h3>
                <p class="text-gray-600">
                    Integrity, innovation, inclusivity, and commitment to excellence guide everything we do.
                </p>
            </div>
        </div>

    </div>
</section>


{% endblock %}<!-- templates/apply_internship.html -->
{% extends 'base.html' %}
{% load static %}

{% block title %}Apply for {{ internship.title }}{% endblock %}

{% block content %}
<div class="container mx-auto px-4 py-16">
    <h1 class="text-3xl font-bold text-center mb-8">Apply for {{ internship.title }}</h1>
    <p class="text-center text-gray-600 mb-8">Review and update your details below before submitting your application.</p>

    <form method="POST" enctype="multipart/form-data" class="max-w-2xl mx-auto bg-white p-6 rounded-xl shadow-lg">
        {% csrf_token %}
        <div class="mb-4">
            <label class="block text-gray-700 font-semibold mb-2" for="full_name">Full Name</label>
            <input type="text" id="full_name" name="full_name" value="{{ profile.full_name }}"
                   class="w-full p-3 border rounded-lg focus:outline-none focus:border-blue-500" required>
        </div>
        <div class="mb-4">
            <label class="block text-gray-700 font-semibold mb-2" for="email">Email</label>
            <input type="email" id="email" name="email" value="{{ profile.email }}"
                   class="w-full p-3 border rounded-lg focus:outline-none focus:border-blue-500" required>
        </div>
        <div class="mb-4">
            <label class="block text-gray-700 font-semibold mb-2" for="skills">Skills</label>
            <textarea id="skills" name="skills" class="w-full p-3 border rounded-lg focus:outline-none focus:border-blue-500" required>{{ profile.skills }}</textarea>
        </div>
        <div class="mb-4">
            <label class="block text-gray-700 font-semibold mb-2" for="experience">Experience</label>
            <textarea id="experience" name="experience" class="w-full p-3 border rounded-lg focus:outline-none focus:border-blue-500">{{ profile.experience }}</textarea>
        </div>
        <div class="mb-4">
            <label class="block text-gray-700 font-semibold mb-2" for="resume">Resume</label>
            <input type="file" id="resume" name="resume" class="w-full p-3 border rounded-lg">
            {% if profile.resume %}
                <p class="text-sm text-gray-500">Current: <a href="{{ profile.resume.url }}" target="_blank">View Resume</a></p>
            {% endif %}
        </div>
        <div class="mb-4">
            <label class="block text-gray-700 font-semibold mb-2" for="linkedin">LinkedIn URL</label>
            <input type="url" id="linkedin" name="linkedin" value="{{ profile.linkedin }}"
                   class="w-full p-3 border rounded-lg focus:outline-none focus:border-blue-500">
        </div>
        <div class="mb-4">
            <label class="block text-gray-700 font-semibold mb-2" for="projects">Projects</label>
            <textarea id="projects" name="projects" class="w-full p-3 border rounded-lg focus:outline-none focus:border-blue-500">{{ profile.projects }}</textarea>
        </div>
        <div class="text-center">
            <button type="submit" class="bg-blue-500 text-white px-6 py-3 rounded-full hover:bg-blue-600 transition">
                Submit{% load static %}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{% block title %}Aspire Interns - {% endblock %}</title>
    <link rel="icon" href="{% static 'images/Logo.jpg' %}" type="image/x-icon">
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="stylesheet" href="{% static 'css/styles.css' %}">
    <script src="https://kit.fontawesome.com/your-kit-id.js" crossorigin="anonymous"></script>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;700&display=swap" rel="stylesheet">
    {% block extra_head %}{% endblock %}
    <style>
        .logo-hover {
            transition: transform 0.3s;
        }
        .logo-hover:hover {
            transform: scale(1.2);
        }

        .ripple {
            position: absolute;
            border-radius: 50%;
            background-color: rgba(255, 255, 255, 0.4);
            transform: scale(0);
            animation: ripple-animation 0.6s linear;
            pointer-events: none;
        }

        @keyframes ripple-animation {
            to {
                transform: scale(4);
                opacity: 0;
            }
        }

        .animate-on-load {
            opacity: 0;
            transform: translateY(20px);
            transition: opacity 0.5s ease, transform 0.5s ease;
        }

        .animate-on-load.visible {
            opacity: 1;
            transform: translateY(0);
        }

        .js-loaded .animate-on-load {
            opacity: 1;
            transform: translateY(0);
        }
    </style>
</head>
<body class="antialiased text-gray-900">
    <div class="container mx-auto px-4 py-4">
        <nav class="flex justify-between items-center bg-gray-800 text-white p-4 rounded-xl shadow-md">
            <div class="flex items-center space-x-2">
                <img
                    src="{% static 'images/Logo.jpg' %}"
                    alt="Aspire Internships Logo"
                    class="h-16 w-16 rounded-full cursor-pointer logo-hover">
                <div class="text-2xl font-bold">
                    Aspire Interns
                </div>
            </div>
            <ul id="mobile-menu" class="hidden md:flex space-x-6 text-lg">
                <li><a href="{% url 'app_fyp:index' %}" class="hover:text-blue-400">Home</a></li>
                <li><a href="{% url 'app_fyp:internships' %}" class="hover:text-blue-400">Internships</a></li>
                <li><a href="{% url 'app_fyp:about' %}" class="hover:text-blue-400">About</a></li>
                <li><a href="{% url 'app_fyp:contact' %}" class="hover:text-blue-400">Contact</a></li>
                {% if user.is_authenticated %}
                    <li><span class="text-blue-400">{{ user.full_name }}</span></li>
                    <li>
                        <form action="{% url 'user_auth:logout' %}" method="post">
                            {% csrf_token %}
                            <button type="submit" class="hover:text-blue-400">Logout</button>
                        </form>
                    </li>
                {% else %}
                    <li><a href="{% url 'user_auth:login' %}" class="hover:text-blue-400">Login</a></li>
                {% endif %}
            </ul>
            <button class="bg-blue-500 px-4 py-2 rounded-full hover:bg-blue-600 transition md:hidden" id="mobile-menu-btn" aria-expanded="false" aria-controls="mobile-menu">
                Menu
            </button>
        </nav>
    </div>
    {% if messages %}
        <div class="container mx-auto px-4 py-2">
            {% for message in messages %}
                <div class="alert {{ message.tags }} p-4 rounded-lg bg-blue-100 text-blue-800 shadow">
                    {{ message }}
                </div>
            {% endfor %}
        </div>
    {% endif %}
    <main>
        {% block content %}
        {% endblock %}
    </main>
    <footer id="contact" class="bg-gray-800 text-gray-300 py-12">
        <div class="container mx-auto grid md:grid-cols-4 gap-8">
            <div>
                <h5 class="text-lg font-bold mb-4 text-white">About Us</h5>
                <p>
                    Aspire Internships is committed to providing career-transforming opportunities for young professionals worldwide.
                </p>
            </div>
            <div>
                <h5 class="text-lg font-bold mb-4 text-white">Quick Links</h5>
                <ul>
                    <li><a href="{% url 'app_fyp:index' %}" class="hover:text-blue-400">Home</a></li>
                    <li><a href="{% url 'app_fyp:unpaid_internships' %}" class="hover:text-blue-400">Unpaid Internships</a></li>
                    <li><a href="{% url 'app_fyp:paid_internships' %}" class="hover:text-blue-400">Paid Internships</a></li>
                    <li><a href="{% url 'app_fyp:about' %}" class="hover:text-blue-400">About Us</a></li>
                    <li><a href="{% url 'app_fyp:contact' %}" class="hover:text-blue-400">Contact Us</a></li>
                </ul>
            </div>
            <div>
                <h5 class="text-lg font-bold mb-4 text-white">Contact</h5>
                <ul>
                    <li>Email: <a href="mailto:info@aspireinternships.com" class="hover:text-blue-400">info@aspireinternships.com</a></li>
                    <li>Phone: +923243992858</li>
                    <li>Address: Bhawalpur, Punjab, Pakistan</li>
                </ul>
            </div>
            <div>
                <h5 class="text-lg font-bold mb-4 text-white">Follow Us</h5>
                <ul class="flex space-x-4">
                    <li><a href="https://www.linkedin.com/in/muhammad-saim-sajid-744078266/" class="hover:text-blue-400">LinkedIn</a></li>
                    <li><a href="https://github.com/saimsajidirl" class="hover:text-blue-400">Github</a></li>
                </ul>
            </div>
        </div>
        <div class="border-t border-gray-700 mt-8 pt-6 text-center">
            <p>© 2024 Aspire Internships. All Rights Reserved.</p>
        </div>
    </footer>
    <script>
  document.getElementById('mobile-menu-btn').addEventListener('click', function() {
  const nav = document.getElementById('mobile-menu');
  const expanded = this.getAttribute('aria-expanded') === 'true';
  this.setAttribute('aria-expanded', !expanded);
  nav.classList.toggle('hidden');
});

document.addEventListener('DOMContentLoaded', function() {
  const nav = document.querySelector('nav');
  const internshipCards = document.querySelectorAll('.internship-card');
  const categoryCards = document.querySelectorAll('#categories > div');
  const statItems = document.querySelectorAll('.stat-item');
  const aboutSection = document.querySelector('#about');
  const testimonialItems = document.querySelectorAll('#testimonials > div');
  const heroTitle = document.querySelector('.hero-gradient');

  function handleNavScroll() {
    if (window.scrollY > 50) {
      nav.classList.add('scrolled');
    } else {
      nav.classList.remove('scrolled');
    }
  }

  let scrollTimeout;
  window.addEventListener('scroll', function() {
    if (!scrollTimeout) {
      scrollTimeout = setTimeout(function() {
        handleNavScroll();
        scrollTimeout = null;
      }, 10);
    }
  });

  const animateElements = [
    ...internshipCards,
    ...categoryCards,
    ...statItems,
    aboutSection,
    ...testimonialItems
  ].filter(Boolean);

  animateElements.forEach((el, index) => {
    el.classList.add('animate-on-load');
    el.style.animationDelay = `${index * 0.1}s`;
  });

  setTimeout(() => {
    animateElements.forEach(el => el.classList.add('visible'));
  }, 100);

  const buttons = document.querySelectorAll('button, .btn, a[class*="bg-"]');

  buttons.forEach(button => {
    button.addEventListener('click', function(e) {
      const x = e.clientX - e.target.getBoundingClientRect().left;
      const y = e.clientY - e.target.getBoundingClientRect().top;
      const ripple = document.createElement('span');
      ripple.classList.add('ripple');
      ripple.style.left = `${x}px`;
      ripple.style.top = `${y}px`;
      this.appendChild(ripple);
      setTimeout(() => ripple.remove(), 600);
    });
  });

  const searchBox = document.getElementById('internship-search');
  if (searchBox) {
    searchBox.addEventListener('focus', function() {
      if (window.innerWidth < 768) this.style.width = '100%';
    });
    searchBox.addEventListener('blur', function() {
      if (window.innerWidth < 768) this.style.width = '';
    });
  }

  if (heroTitle) {
    window.addEventListener('mousemove', function(e) {
      const moveX = (e.clientX - window.innerWidth / 2) * 0.01;
      const moveY = (e.clientY - window.innerHeight / 2) * 0.01;
      heroTitle.style.transform = `translate(${moveX}px, ${moveY}px)`;
    });
  }

  function animateCounter(el) {
    const target = parseInt(el.textContent);
    const duration = 2000;
    const frameRate = 1000 / 60;
    const totalFrames = Math.round(duration / frameRate);
    let frame = 0;

    const counter = setInterval(() => {
      frame++;
      const progress = frame / totalFrames;
      const currentCount = Math.round(target * progress);
      if (frame === totalFrames) {
        clearInterval(counter);
        el.textContent = target;
      } else {
        el.textContent = currentCount;
      }
    }, frameRate);
  }

  const statNumbers = document.querySelectorAll('.stat-item h3');
  statNumbers.forEach(stat => animateCounter(stat));

  function handleResize() {
    if (window.innerWidth <= 768) {
      document.querySelectorAll('.internship-card').forEach(card => {
        card.style.transition = 'all 0.3s ease';
      });
    }
  }
  handleResize();

  let resizeTimer;
  window.addEventListener('resize', function() {
    clearTimeout(resizeTimer);
    resizeTimer = setTimeout(handleResize, 250);
  });

  const modal = document.getElementById('internship-modal');
  const modalContent = document.getElementById('modal-content');

  if (modal) {
    modal.addEventListener('transitionstart', function() {
      modalContent.style.willChange = 'transform, opacity';
    });
    modal.addEventListener('transitionend', function() {
      modalContent.style.willChange = 'auto';
    });
  }

  requestAnimationFrame(() => {
    document.body.classList.add('js-loaded');
  });
});
    </script>
    {% block extra_scripts %}{% endblock %}

</body>
</html>{% extends 'base.html' %}

{% block title %}Aspire Interns{% endblock %}

{% block content %}
    <section id="contact" class="py-16 bg-gradient-to-r from-gray-800 to-gray-900 text-gray-300">
        <div class="container mx-auto px-6 md:px-16">
            <h2 class="text-4xl font-bold text-center text-white mb-8">Get in Touch</h2>
            <p class="text-lg text-center text-gray-400 mb-12 max-w-2xl mx-auto">
                Have questions or want to learn more? We're here to help. Reach out to us anytime!
            </p>

            <!-- Display Django Messages -->
            {% if messages %}
                <div class="mb-6">
                    {% for message in messages %}
                        <div class="p-4 rounded {% if message.tags == 'success' %}bg-green-600{% else %}bg-red-600{% endif %} text-white">
                            {{ message }}
                        </div>
                    {% endfor %}
                </div>
            {% endif %}

            <div class="grid md:grid-cols-2 gap-12">
                <!-- Contact Information -->
                <div>
                    <h3 class="text-2xl font-semibold text-white mb-6">Contact Information</h3>
                    <ul class="space-y-4">
                        <li>
                            <i class="fas fa-envelope text-blue-500 mr-3"></i>
                            <span>Email:</span> 
                            <a href="mailto:info@aspireinternships.com" class="hover:text-blue-400">info@aspireinternships.com</a>
                        </li>
                        <li>
                            <i class="fas fa-phone-alt text-green-500 mr-3"></i>
                            <span>Phone:</span> 
                            <a href="tel:+923243992858" class="hover:text-green-400">+923243992858</a>
                        </li>
                        <li>
                            <i class="fas fa-map-marker-alt text-purple-500 mr-3"></i>
                            <span>Address:</span>
                            Islamia University of Bhawalpur, Punjab, Pakistan
                        </li>
                    </ul>
                    <div class="mt-8">
                        <ul class="flex space-x-6">
                            <li>
                                <a href="#" class="hover:text-blue-400"><i class="fab fa-facebook text-xl"></i></a>
                            </li>
                            <li>
                                <a href="#" class="hover:text-blue-400"><i class="fab fa-twitter text-xl"></i></a>
                            </li>
                            <li>
                                <a href="#" class="hover:text-blue-400"><i class="fab fa-linkedin text-xl"></i></a>
                            </li>
                            <li>
                                <a href="#" class="hover:text-blue-400"><i class="fab fa-instagram text-xl"></i></a>
                            </li>
                        </ul>
                    </div>
                </div>
    
                <!-- Contact Form -->
                <div>
                    <h3 class="text-2xl font-semibold text-white mb-6">Send Us a Message</h3>
                    <form action="{% url 'app_fyp:contact' %}" method="POST" class="space-y-6">
                        {% csrf_token %}
                        <div>
                            <label for="name" class="block text-sm text-gray-400 mb-2">Your Name</label>
                            <input type="text" id="name" name="name" value="{{ request.POST.name|default:'' }}" required class="w-full px-4 py-2 rounded bg-gray-700 text-gray-300 focus:outline-none focus:ring-2 focus:ring-blue-500">
                        </div>
                        <div>
                            <label for="email" class="block text-sm text-gray-400 mb-2">Your Email</label>
                            <input type="email" id="email" name="email" value="{{ request.POST.email|default:'' }}" required class="w-full px-4 py-2 rounded bg-gray-700 text-gray-300 focus:outline-none focus:ring-2 focus:ring-blue-500">
                        </div>
                        <div>
                            <label for="message" class="block text-sm text-gray-400 mb-2">Your Message</label>
                            <textarea id="message" name="message" rows="4" required class="w-full px-4 py-2 rounded bg-gray-700 text-gray-300 focus:outline-none focus:ring-2 focus:ring-blue-500">{{ request.POST.message|default:'' }}</textarea>
                        </div>
                        <button type="submit" class="bg-blue-500 text-white px-6 py-2 rounded-full hover:bg-blue-600 transition">
                            Send Message
                        </button>
                    </form>
                </div>
            </div>
        </div>
    </section>
{% endblock %}{% extends 'base.html' %}
{% load static %}

{% block title %}Aspire Interns{% endblock %}

{% block content %}
<div class="container mx-auto px-4 py-16">
    <!-- Header with Search -->
    <header class="text-center mb-16">
        <h1 class="text-5xl font-bold mb-4 hero-gradient">Aspire Interns</h1>
        <p class="text-xl text-gray-600 max-w-2xl mx-auto">
            Transforming Potential into Professional Excellence
        </p>
        <div class="mt-8 max-w-2xl mx-auto">
            <form method="GET" action="{% url 'app_fyp:index' %}" class="relative">
                <input type="text" id="internship-search" name="q" value="{{ query }}"
                       class="w-full p-4 rounded-full border-2 border-gray-300 focus:border-blue-500 focus:outline-none"
                       placeholder="Search internships by title, company, or location...">
                <button type="submit" class="absolute right-2 top-1/2 transform -translate-y-1/2 bg-blue-500 text-white px-6 py-2 rounded-full hover:bg-blue-600">
                    Search
                </button>
            </form>
            <!-- Filters -->
            <form method="GET" action="{% url 'app_fyp:index' %}" class="flex justify-center space-x-4 mt-4 flex-wrap">
                <select class="p-2 rounded-lg border" id="type-filter" name="type">
                    <option value="">All Types</option>
                    <option value="paid" {% if request.GET.type == 'paid' %}selected{% endif %}>Paid</option>
                    <option value="unpaid" {% if request.GET.type == 'unpaid' %}selected{% endif %}>Unpaid</option>
                    <option value="remote" {% if request.GET.type == 'remote' %}selected{% endif %}>Remote</option>
                </select>
                <select class="p-2 rounded-lg border" id="duration-filter" name="duration">
                    <option value="">All Durations</option>
                    <option value="1-3" {% if request.GET.duration == '1-3' %}selected{% endif %}>1-3 Months</option>
                    <option value="3-6" {% if request.GET.duration == '3-6' %}selected{% endif %}>3-6 Months</option>
                    <option value="6+" {% if request.GET.duration == '6+' %}selected{% endif %}>6+ Months</option>
                </select>
                <select class="p-2 rounded-lg border" id="location-filter" name="location">
                    <option value="">All Locations</option>
                    <option value="remote" {% if request.GET.location == 'remote' %}selected{% endif %}>Remote</option>
                    <option value="onsite" {% if request.GET.location == 'onsite' %}selected{% endif %}>On-site</option>
                </select>
                <button type="submit" class="bg-blue-500 text-white px-4 py-2 rounded-lg hover:bg-blue-600">Filter</button>
            </form>
        </div>
    </header>

    <!-- Stats Section -->
    <section id="stats" class="stats-section mb-16">
        <div class="stats-grid md:grid-cols-4">
            <div class="stat-item">
                <h3 class="stat-number stat-blue">{{ total_opportunities }}</h3>
                <p class="stat-label">Total Opportunities</p>
            </div>
            <div class="stat-item">
                <h3 class="stat-number stat-green">183</h3> <!-- Replace with dynamic data if available -->
                <p class="stat-label">Active Interns</p>
            </div>
            <div class="stat-item">
                <h3 class="stat-number stat-purple">{{ partner_companies }}</h3>
                <p class="stat-label">Partner Companies</p>
            </div>
            <div class="stat-item">
                <h3 class="stat-number stat-orange">87%</h3> <!-- Replace with dynamic data if available -->
                <p class="stat-label">Success Rate</p>
            </div>
        </div>
    </section>

    <!-- Featured Internships Section -->
    <section id="featured" class="mb-16">
        <h2 class="text-3xl font-bold text-center mb-8 text-gray-800">
            {% if query or request.GET.type or request.GET.duration or request.GET.location %}
                Search Results
            {% else %}
                Featured Internships
            {% endif %}
        </h2>
        <div class="grid md:grid-cols-3 gap-8" id="internship-list">
            {% for internship in internships %}
                <div class="bg-white rounded-xl shadow-lg p-6 card-hover internship-card mb-12">
                    <div class="relative">
                        <span class="absolute top-0 right-0
                            {% if internship.internship_type|lower == 'paid' %}bg-green-500
                            {% elif internship.internship_type|lower == 'unpaid' %}bg-orange-500
                            {% elif internship.internship_type|lower == 'remote' %}bg-purple-500
                            {% else %}bg-gray-500{% endif %}
                            text-white px-3 py-1 text-sm internship-type-badge rounded-full mb-5">
                            {{ internship.internship_type|title }}
                        </span>
                        <h3 class="text-2xl font-semibold mb-2 text-{{ internship.internship_type|lower }}-600">
                            {{ internship.title }}
                        </h3>
                        <p class="text-gray-600 mb-2"><strong>Company:</strong> {{ internship.company }}</p>
                        <p class="text-gray-600 mb-2"><strong>Location:</strong> {{ internship.location }}</p>
                        <p class="text-gray-600 mb-2"><strong>Duration:</strong> {{ internship.duration }}</p>
                        <p class="text-gray-600 mb-4">{{ internship.description|truncatewords:20 }}</p>
                        <div class="flex justify-between items-center">
                            {% if user.is_authenticated %}
                                <a href="{% url 'app_fyp:apply_internship' internship.id %}"
                                   class="bg-{{ internship.internship_type|lower }}-500 text-white px-6 py-2 rounded-none hover:bg-{{ internship.internship_type|lower }}-600 transition">
                                    Apply Now
                                </a>
                            {% else %}
                                <a href="{% url 'user_auth:login' %}?next={% url 'app_fyp:index' %}"
                                   class="bg-gray-500 text-white px-6 py-2 rounded-none hover:bg-gray-600 transition">
                                    Login to Apply
                                </a>
                            {% endif %}
                            <button class="text-blue-600 hover:underline" onclick="showDetails({{ internship.id }})">
                                View Details
                            </button>
                        </div>
                    </div>
                </div>
            {% empty %}
                <p class="text-center text-gray-600">No internships available matching your criteria.</p>
            {% endfor %}
        </div>
    </section>

    <!-- Categories Section -->
    <section id="categories" class="grid md:grid-cols-3 gap-8 mb-16">
        <div class="bg-white rounded-xl shadow-lg p-6 card-hover">
            <div class="relative">
                <span class="absolute top-0 right-0 bg-green-500 text-white px-3 py-1 text-sm internship-type-badge">
                    Paid ({{ paid_count }})
                </span>
                <h2 class="text-2xl font-semibold mb-4 text-blue-600">Paid Internships</h2>
                <p class="text-gray-600 mb-4">Competitive compensation for top talent.</p>
                <ul class="space-y-2 text-sm text-gray-700 mb-6">
                    <li>✓ Competitive Salary</li>
                    <li>✓ Performance Bonuses</li>
                    <li>✓ Professional Development</li>
                </ul>
                <a href="{% url 'app_fyp:paid_internships' %}" class="bg-blue-500 text-white px-6 py-2 rounded-full hover:bg-blue-600 transition">
                    Apply Now
                </a>
            </div>
        </div>
        <div class="bg-white rounded-xl shadow-lg p-6 card-hover">
            <div class="relative">
                <span class="absolute top-0 right-0 bg-orange-500 text-white px-3 py-1 text-sm internship-type-badge">
                    Unpaid ({{ unpaid_count }})
                </span>
                <h2 class="text-2xl font-semibold mb-4 text-green-600">Skill-Building Internships</h2>
                <p class="text-gray-600 mb-4">Zero-cost learning opportunities.</p>
                <ul class="space-y-2 text-sm text-gray-700 mb-6">
                    <li>✓ Mentorship Programs</li>
                    <li>✓ Certificate of Completion</li>
                    <li>✓ Portfolio Enhancement</li>
                </ul>
                <a href="{% url 'app_fyp:unpaid_internships' %}" class="bg-green-500 text-white px-6 py-2 rounded-full hover:bg-green-600 transition">
                    Explore Opportunities
                </a>
            </div>
        </div>
        <div class="bg-white rounded-xl shadow-lg p-6 card-hover">
            <div class="relative">
                <span class="absolute top-0 right-0 bg-purple-500 text-white px-3 py-1 text-sm internship-type-badge">
                    Remote ({{ remote_count }})
                </span>
                <h2 class="text-2xl font-semibold mb-4 text-purple-600">Remote Internships</h2>
                <p class="text-gray-600 mb-4">Global opportunities from home.</p>
                <ul class="space-y-2 text-sm text-gray-700 mb-6">
                    <li>✓ Global Exposure</li>
                    <li>✓ Flexible Schedules</li>
                    <li>✓ Cross-Cultural Experience</li>
                </ul>
                <a href="{% url 'app_fyp:remote_internships' %}" class="bg-purple-500 text-white px-6 py-2 rounded-full hover:bg-purple-600 transition">
                    Discover Remote Roles
                </a>
            </div>
        </div>
    </section>

    <!-- About Section -->
    <section id="about" class="mt-16 text-center">
        <div class="bg-gradient-to-r from-blue-500 to-green-500 text-white rounded-xl p-12">
            <h3 class="text-3xl font-bold mb-4">Your Career Journey Starts Here</h3>
            <p class="text-xl mb-8">Transform your potential into professional success with Aspire Interns</p>
            <div class="flex justify-center space-x-4">
                <a href="{% url 'app_fyp:paid_internships' %}" class="bg-white text-blue-600 px-8 py-3 rounded-full font-semibold hover:bg-gray-100 transition">
                    Check Paid Internships
                </a>
                <a href="{% url 'app_fyp:unpaid_internships' %}" class="bg-white text-blue-600 px-8 py-3 rounded-full font-semibold hover:bg-gray-100 transition">
                    Check Unpaid Internships
                </a>
            </div>
        </div>
    </section>

    <!-- Testimonials Section -->
    <section id="testimonials" class="mt-16 text-center bg-gray-100 py-16">
        <h2 class="text-3xl font-bold mb-8">What Our Interns Say</h2>
        <div class="flex justify-center space-x-12">
            <div class="bg-white p-8 rounded-xl shadow-lg max-w-sm text-center testimonial-card">
                <p class="text-gray-600 mb-4">"Aspire Interns helped me gain invaluable experience..."</p>
                <h3 class="text-lg font-semibold text-blue-600">Huzaifa Muddasir</h3>
                <p class="text-sm text-gray-500">Marketing Intern, 2023</p>
            </div>
            <div class="bg-white p-8 rounded-xl shadow-lg max-w-sm text-center testimonial-card">
                <p class="text-gray-600 mb-4">"The mentorship I received was unparalleled..."</p>
                <h3 class="text-lg font-semibold text-blue-600">Shoaib Hassan</h3>
                <p class="text-sm text-gray-500">Software Engineering Intern, 2023</p>
            </div>
            <div class="bg-white p-8 rounded-xl shadow-lg max-w-sm text-center testimonial-card">
                <p class="text-gray-600 mb-4">"Being a remote intern was an amazing experience..."</p>
                <h3 class="text-lg font-semibold text-blue-600">Iqra Umer</h3>
                <p class="text-sm text-gray-500">Data Science Intern, 2023</p>
            </div>
        </div>
    </section>
</div>

<!-- Internship Details Modal -->
<div id="internship-modal" class="fixed inset-0 bg-black bg-opacity-50 hidden flex items-center justify-center">
    <div class="bg-white rounded-xl p-8 max-w-2xl w-full max-h-[80vh] overflow-y-auto">
        <div class="flex justify-between items-center mb-4">
            <h3 class="text-2xl font-bold" id="modal-title"></h3>
            <button onclick="closeModal()" class="text-gray-600 hover:text-gray-800 text-2xl">×</button>
        </div>
        <div id="modal-content"></div>
    </div>
</div>

<script>
function showDetails(internshipId) {
    const modal = document.getElementById('internship-modal');
    const title = document.getElementById('modal-title');
    const content = document.getElementById('modal-content');

    // Fetch internship details via AJAX
    fetch(`/app_fyp/internship/${internshipId}/details/`, {
        method: 'GET',
        headers: {
            'X-Requested-With': 'XMLHttpRequest', // Indicate this is an AJAX request
        }
    })
    .then(response => {
        if (!response.ok) {
            throw new Error('Network response was not ok');
        }
        return response.json();
    })
    .then(data => {
        // Populate modal with dynamic data
        title.textContent = data.title;
        content.innerHTML = `
            <p><strong>Company:</strong> ${data.company}</p>
            <p><strong>Location:</strong> ${data.location}</p>
            <p><strong>Duration:</strong> ${data.duration}</p>
            <p><strong>Stack:</strong> ${data.stack}</p>
            <p><strong>Description:</strong> ${data.description}</p>
            ${data.stipend ? `<p><strong>Stipend:</strong> ${data.stipend}</p>` : ''}
        `;
        modal.classList.remove('hidden');
    })
    .catch(error => {
        console.error('Error fetching internship details:', error);
        title.textContent = "Error";
        content.innerHTML = "<p>Sorry, we couldn't load the internship details. Please try again later.</p>";
        modal.classList.remove('hidden');
    });
}

function closeModal() {
    document.getElementById('internship-modal').classList.add('hidden');
}
</script>
{% endblock %}{% extends 'base.html' %}

{% block title %}Internships - Aspire Interns{% endblock %}

{% block content %}
<div class="container mx-auto px-4 py-16">
    <header class="text-center mb-16">
        <h1 class="text-5xl font-bold mb-4 hero-gradient">Aspire Interns</h1>
        <p class="text-xl text-gray-600 max-w-2xl mx-auto">
            Your Gateway to Professional Growth
        </p>
    </header>

    <section id="internships-overview" class="mt-16">
        <h2 class="text-4xl font-bold text-center mb-8 text-gray-800">Explore Internship Opportunities</h2>
        <p class="text-center mb-12 text-gray-600">Choose the path that suits you best and start building your career today.</p>

        <div class="grid md:grid-cols-3 gap-8">
            <!-- Paid Internships -->
            <div class="bg-white rounded-xl shadow-lg p-6 card-hover hover:scale-105 transition-all duration-300 ease-in-out transform">
                <h3 class="text-xl font-semibold text-blue-600 mb-4">Paid Internships</h3>
                <p class="text-gray-700 mb-4">Earn while you learn with our paid internship opportunities.</p>
                <p class="text-gray-600 mb-4"><strong>Available:</strong> {{ paid_count }}</p>
                <a href="{% url 'app_fyp:paid_internships' %}" class="bg-blue-500 text-white px-4 py-2 rounded-full hover:bg-blue-600 transition">View Paid Internships</a>
            </div>

            <!-- Unpaid Internships -->
            <div class="bg-white rounded-xl shadow-lg p-6 card-hover hover:scale-105 transition-all duration-300 ease-in-out transform">
                <h3 class="text-xl font-semibold text-blue-600 mb-4">Unpaid Internships</h3>
                <p class="text-gray-700 mb-4">Gain valuable experience and skills through unpaid roles.</p>
                <p class="text-gray-600 mb-4"><strong>Available:</strong> {{ unpaid_count }}</p>
                <a href="{% url 'app_fyp:unpaid_internships' %}" class="bg-blue-500 text-white px-4 py-2 rounded-full hover:bg-blue-600 transition">View Unpaid Internships</a>
            </div>

            <!-- Remote Internships -->
            <div class="bg-white rounded-xl shadow-lg p-6 card-hover hover:scale-105 transition-all duration-300 ease-in-out transform">
                <h3 class="text-xl font-semibold text-blue-600 mb-4">Remote Internships</h3>
                <p class="text-gray-700 mb-4">Work from anywhere with our remote internship options.</p>
                <p class="text-gray-600 mb-4"><strong>Available:</strong> {{ remote_count }}</p>
                {% if remote_count > 0 %}
                    <a href="{% url 'app_fyp:remote_internships' %}" class="bg-blue-500 text-white px-4 py-2 rounded-full hover:bg-blue-600 transition">View Remote Internships</a>
                {% else %}
                    <a href="#" class="bg-gray-400 text-white px-4 py-2 rounded-full cursor-not-allowed">Coming Soon</a>
                {% endif %}
            </div>
        </div>
    </section>
</div>
{% endblock %}{% extends 'base.html' %}

{% block title %}Aspire Interns - Login{% endblock %}

{% block content %}
<div class="container mx-auto px-4 py-16">
    <div class="max-w-lg mx-auto bg-white rounded-lg shadow-lg p-8">
        <h2 class="text-3xl font-bold text-center mb-6 text-blue-600">Log In to Your Account</h2>

        <!-- Display Error Messages -->
        {% if messages %}
            <div class="mb-4">
                {% for message in messages %}
                    <div class="p-3 rounded {% if message.tags == 'error' %}bg-red-100 text-red-700{% else %}bg-green-100 text-green-700{% endif %}">
                        {{ message }}
                    </div>
                {% endfor %}
            </div>
        {% endif %}

        <form id="loginForm" action="{% url 'user_auth:login' %}" method="POST">
            {% csrf_token %}
            <!-- Email -->
            <div class="mb-4">
                <label for="email" class="block text-sm font-medium text-gray-700">Email</label>
                <input 
                    type="email" 
                    id="email" 
                    name="email" 
                    class="mt-1 block w-full p-2 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500"
                    placeholder="Enter your email"
                    value="{{ request.POST.email|default:'' }}"
                    required>
            </div>
            <!-- Password -->
            <div class="mb-4">
                <label for="password" class="block text-sm font-medium text-gray-700">Password</label>
                <input 
                    type="password" 
                    id="password" 
                    name="password" 
                    class="mt-1 block w-full p-2 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500"
                    placeholder="Enter your password"
                    required>
            </div>
            <!-- Submit Button -->
            <div class="mt-6">
                <button 
                    type="submit" 
                    class="w-full bg-blue-500 text-white py-2 px-4 rounded-lg hover:bg-blue-600 focus:outline-none focus:ring focus:ring-blue-300">
                    Log In
                </button>
            </div>
        </form>
        <p class="mt-4 text-center text-sm text-gray-600">
            Don't have an account? 
            <a href="{% url 'user_auth:signup' %}" class="text-blue-500 hover:text-blue-700">Sign Up</a>
        </p>
    </div>
</div>

{% endblock %}{% extends 'base.html' %}

{% block title %}Paid Internships - Aspire Interns{% endblock %}

{% block content %}
<div class="container mx-auto px-4 py-16">
    <header class="text-center mb-16">
        <h1 class="text-5xl font-bold mb-4 hero-gradient">Aspire Interns</h1>
        <p class="text-xl text-gray-600 max-w-2xl mx-auto">
            Transforming Potential into Professional Excellence
        </p>
    </header>

    <section id="internship-listings" class="mt-16">
        <h2 class="text-4xl font-bold text-center mb-8 text-gray-800">Explore Exciting Paid Internships</h2>
        <p class="text-center mb-12 text-gray-600">Kickstart your career with hands-on experience and learn from industry leaders.</p>

        <div class="grid md:grid-cols-3 gap-8">
            {% for internship in internships %}
                <div class="bg-white rounded-xl shadow-lg p-6 card-hover hover:scale-105 transition-all duration-300 ease-in-out transform">
                    <div class="flex items-center mb-4">
                        <!-- Placeholder image; replace with dynamic logo if added to model -->
                        <img src="https://via.placeholder.com/40" alt="{{ internship.company }} Logo" class="w-12 h-12 rounded-full mr-4">
                        <div>
                            <h3 class="text-xl font-semibold text-blue-600 mb-1">{{ internship.title }}</h3>
                            <p class="text-sm text-gray-500">{{ internship.company }}</p>
                        </div>
                    </div>
                    <p class="text-gray-700 mb-2"><strong>Type:</strong> {{ internship.internship_type }}</p>
                    <p class="text-gray-700 mb-2"><strong>Description:</strong> {{ internship.description|truncatewords:20 }}</p>
                    <!-- Apply Link -->
                    <a href="{% url 'app_fyp:apply_internship' internship.id %}" class="bg-blue-500 text-white px-4 py-2 rounded-full hover:bg-blue-600 transition">Apply Now</a>
                </div>
            {% empty %}
                <p class="text-center text-gray-600 col-span-3">No paid internships available at the moment.</p>
            {% endfor %}
        </div>
    </section>
</div>
{% endblock %}{% extends 'base.html' %}

{% block title %}My Profile - Aspire Interns{% endblock %}

{% block content %}
<div class="container mx-auto px-4 py-16">
    <!-- Profile Header -->
    <header class="text-center mb-12">
        <h1 class="text-4xl font-bold text-gray-800 mb-2">My Profile</h1>
        <p class="text-lg text-gray-600">Manage your account and track your internship applications.</p>
    </header>

    <!-- Profile Information -->
    <section class="bg-white rounded-xl shadow-lg p-8 max-w-2xl mx-auto mb-12">
        <h2 class="text-2xl font-semibold text-blue-600 mb-6">Personal Information</h2>
        {% if profile %}
            <div class="space-y-4">
                <div>
                    <label class="block text-sm font-medium text-gray-700">Full Name</label>
                    <p class="mt-1 text-lg text-gray-900">{{ profile.full_name }}</p>
                </div>
                <div>
                    <label class="block text-sm font-medium text-gray-700">Email</label>
                    <p class="mt-1 text-lg text-gray-900">{{ profile.email }}</p>
                </div>
                <div>
                    <label class="block text-sm font-medium text-gray-700">Skills</label>
                    <p class="mt-1 text-lg text-gray-900">{{ profile.skills|default:"Not specified" }}</p>
                </div>
                <div>
                    <label class="block text-sm font-medium text-gray-700">Experience</label>
                    <p class="mt-1 text-lg text-gray-900">{{ profile.experience|default:"Not specified" }}</p>
                </div>
                <div>
                    <label class="block text-sm font-medium text-gray-700">LinkedIn</label>
                    <p class="mt-1 text-lg text-gray-900">
                        {% if profile.linkedin %}
                            <a href="{{ profile.linkedin }}" class="text-blue-500 hover:text-blue-700">{{ profile.linkedin }}</a>
                        {% else %}
                            Not specified
                        {% endif %}
                    </p>
                </div>
                <div>
                    <label class="block text-sm font-medium text-gray-700">Joined</label>
                    <p class="mt-1 text-lg text-gray-900">{{ user.date_joined|date:"F j, Y" }}</p>
                </div>
            </div>
            <div class="mt-6">
                <a href="{% url 'user_auth:edit_profile' %}" class="bg-blue-500 text-white px-6 py-2 rounded-full hover:bg-blue-600 transition">Edit Profile</a>
            </div>
        {% else %}
            <p class="text-center text-gray-600">Profile not found. Please complete your profile.</p>
        {% endif %}
    </section>

    <!-- Internship Applications -->
    <section class="max-w-4xl mx-auto">
        <h2 class="text-2xl font-semibold text-gray-800 mb-6 text-center">My Internship Applications</h2>
        {% if applications %}
            <div class="grid md:grid-cols-2 gap-8">
                {% for application in applications %}
                    <div class="bg-white rounded-xl shadow-lg p-6 card-hover hover:scale-105 transition-all duration-300 ease-in-out transform">
                        <h3 class="text-xl font-semibold text-blue-600 mb-2">{{ application.internship.title }}</h3>
                        <p class="text-gray-600 mb-2"><strong>Company:</strong> {{ application.internship.company }}</p>
                        <p class="text-gray-600 mb-2"><strong>Applied Date:</strong> {{ application.created_at|date:"F j, Y" }}</p>
                        <p class="text-gray-600 mb-2"><strong>Status:</strong>
                            <span class="{% if application.status == 'Submitted' %}text-yellow-600{% elif application.status == 'Approved' %}text-green-600{% else %}text-red-600{% endif %}">
                                {{ application.status|title }}
                            </span>
                        </p>
                    </div>
                {% endfor %}
            </div>
        {% else %}
            <p class="text-center text-gray-600">You haven’t applied to any internships yet. 
                <a href="{% url 'app_fyp:paid_internships' %}" class="text-blue-500 hover:text-blue-700">Explore opportunities</a>.
            </p>
        {% endif %}
    </section>
</div>
{% endblock %}<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Title</title>
</head>
<body>

</body>
</html>{% extends 'base.html' %}

{% block title %}Sign Up - Aspire Interns{% endblock %}

{% block content %}
<div class="container mx-auto px-4 py-16">
    <div class="max-w-lg mx-auto bg-white rounded-lg shadow-lg p-8">
        <h2 class="text-3xl font-bold text-center mb-6 text-blue-600">Create Your Account</h2>

        <!-- Display Messages -->
        {% if messages %}
            <div class="mb-6">
                {% for message in messages %}
                    <div class="p-3 rounded {% if message.tags == 'error' %}bg-red-100 text-red-700{% else %}bg-green-100 text-green-700{% endif %}">
                        {{ message }}
                    </div>
                {% endfor %}
            </div>
        {% endif %}

        <form id="signupForm" action="{% url 'user_auth:signup' %}" method="POST" enctype="multipart/form-data" class="space-y-6">
            {% csrf_token %}
            <!-- Full Name -->
            <div>
                <label for="fullName" class="block text-sm font-medium text-gray-700">Full Name</label>
                <input
                    type="text"
                    id="fullName"
                    name="full_name"
                    value="{{ request.POST.full_name|default:'' }}"
                    class="mt-1 block w-full p-2 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500"
                    placeholder="Enter your full name"
                    required>
            </div>
            <!-- Email -->
            <div>
                <label for="email" class="block text-sm font-medium text-gray-700">Email</label>
                <input
                    type="email"
                    id="email"
                    name="email"
                    value="{{ request.POST.email|default:'' }}"
                    class="mt-1 block w-full p-2 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500"
                    placeholder="Enter your email"
                    required>
            </div>
            <!-- Password -->
            <div>
                <label for="password" class="block text-sm font-medium text-gray-700">Password</label>
                <input
                    type="password"
                    id="password"
                    name="password"
                    class="mt-1 block w-full p-2 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500"
                    placeholder="Create a password"
                    required>
            </div>
            <!-- Confirm Password -->
            <div>
                <label for="confirmPassword" class="block text-sm font-medium text-gray-700">Confirm Password</label>
                <input
                    type="password"
                    id="confirmPassword"
                    name="confirm_password"
                    class="mt-1 block w-full p-2 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500"
                    placeholder="Confirm your password"
                    required>
            </div>
            <!-- Skills -->
            <div>
                <label for="skills" class="block text-sm font-medium text-gray-700">Skills</label>
                <textarea
                    id="skills"
                    name="skills"
                    rows="3"
                    class="mt-1 block w-full p-2 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500"
                    placeholder="List your skills (e.g., Python, React, Data Analysis)"
                    required>{{ request.POST.skills|default:'' }}</textarea>
            </div>
            <!-- Experience -->
            <div>
                <label for="experience" class="block text-sm font-medium text-gray-700">Experience</label>
                <textarea
                    id="experience"
                    name="experience"
                    rows="3"
                    class="mt-1 block w-full p-2 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500"
                    placeholder="Describe your experience (e.g., projects, internships, volunteer work)">{{ request.POST.experience|default:'' }}</textarea>
            </div>
            <!-- Resume -->
            <div>
                <label for="resume" class="block text-sm font-medium text-gray-700">Resume</label>
                <input
                    type="file"
                    id="resume"
                    name="resume"
                    accept=".pdf,.doc,.docx"
                    class="mt-1 block w-full p-2 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500">
                <p class="text-xs text-gray-500 mt-1">Upload PDF, DOC, or DOCX (max 5MB)</p>
            </div>
            <!-- LinkedIn Link -->
            <div>
                <label for="linkedin" class="block text-sm font-medium text-gray-700">LinkedIn Profile</label>
                <input
                    type="url"
                    id="linkedin"
                    name="linkedin"
                    value="{{ request.POST.linkedin|default:'' }}"
                    class="mt-1 block w-full p-2 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500"
                    placeholder="https://www.linkedin.com/in/your-profile">
            </div>
            <!-- Projects Link -->
            <div>
                <label for="projects" class="block text-sm font-medium text-gray-700">Projects Link (e.g., GitHub)</label>
                <input
                    type="url"
                    id="projects"
                    name="projects"
                    value="{{ request.POST.projects|default:'' }}"
                    class="mt-1 block w-full p-2 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500"
                    placeholder="https://github.com/your-projects">
            </div>
            <!-- Submit Button -->
            <div class="mt-6">
                <button
                    type="submit"
                    class="w-full bg-blue-500 text-white py-2 px-4 rounded-lg hover:bg-blue-600 focus:outline-none focus:ring focus:ring-blue-300">
                    Sign Up
                </button>
            </div>
        </form>
        <p class="mt-4 text-center text-sm text-gray-600">
            Already have an account?
            <a href="{% url 'user_auth:login' %}" class="text-blue-500 hover:text-blue-700">Log In</a>
        </p>
    </div>
</div>
{% endblock %}{% extends 'base.html' %}

{% block title %}Unpaid Internships - Aspire Interns{% endblock %}

{% block content %}
<div class="container mx-auto px-4 py-16">
    <header class="text-center mb-16">
        <h1 class="text-5xl font-bold mb-4 hero-gradient">Aspire Interns</h1>
        <p class="text-xl text-gray-600 max-w-2xl mx-auto">
            Empowering Futures Through Experience
        </p>
    </header>

    <section id="internship-listings" class="mt-16">
        <h2 class="text-4xl font-bold text-center mb-8 text-gray-800">Discover Valuable Unpaid Internships</h2>
        <p class="text-center mb-12 text-gray-600">Gain hands-on experience and enhance your skills through impactful projects.</p>

        <div class="grid md:grid-cols-3 gap-8">
            {% for internship in internships %}
                <div class="bg-white rounded-xl shadow-lg p-6 card-hover hover:scale-105 transition-all duration-300 ease-in-out transform">
                    <div class="flex items-center mb-4">
                        <img src="https://via.placeholder.com/40" alt="{{ internship.company }} Logo" class="w-12 h-12 rounded-full mr-4">
                        <div>
                            <h3 class="text-xl font-semibold text-blue-600 mb-1">{{ internship.title }}</h3>
                            <p class="text-sm text-gray-500">{{ internship.company }}</p>
                        </div>
                    </div>
                    <p class="text-gray-700 mb-2"><strong>Type:</strong> {{ internship.internship_type }}</p>
                    <p class="text-gray-700 mb-4"><strong>Description:</strong> {{ internship.description|truncatewords:20 }}</p>
                    <button onclick="openModal('{{ internship.id }}')" class="bg-blue-500 text-white px-4 py-2 rounded-full hover:bg-blue-600 transition">Apply Now</button>
                </div>
            {% empty %}
                <p class="text-center text-gray-600 col-span-3">No unpaid internships available at the moment.</p>
            {% endfor %}
        </div>
    </section>
</div>

<!-- Modal Popup -->
<div id="applyModal" class="fixed inset-0 bg-gray-600 bg-opacity-50 hidden flex items-center justify-center z-50">
    <div class="bg-white rounded-lg p-8 max-w-lg w-full max-h-[80vh] overflow-y-auto">
        <h2 class="text-2xl font-bold text-blue-600 mb-6">Apply for Internship</h2>
        {% if messages %}
            <div class="mb-4">
                {% for message in messages %}
                    <div class="p-3 rounded {% if message.tags == 'error' %}bg-red-100 text-red-700{% else %}bg-green-100 text-green-700{% endif %}">
                        {{ message }}
                    </div>
                {% endfor %}
            </div>
        {% endif %}
        <form id="applyForm" action="" method="POST" enctype="multipart/form-data" class="space-y-4">
            {% csrf_token %}
            <input type="hidden" name="internship_id" id="internship_id">
            <div>
                <label for="full_name" class="block text-sm font-medium text-gray-700">Full Name</label>
                <input type="text" id="full_name" name="full_name" class="mt-1 block w-full p-2 border border-gray-300 rounded-lg" required>
            </div>
            <div>
                <label for="email" class="block text-sm font-medium text-gray-700">Email</label>
                <input type="email" id="email" name="email" class="mt-1 block w-full p-2 border border-gray-300 rounded-lg" required>
            </div>
            <div>
                <label for="skills" class="block text-sm font-medium text-gray-700">Skills</label>
                <textarea id="skills" name="skills" rows="3" class="mt-1 block w-full p-2 border border-gray-300 rounded-lg" required></textarea>
            </div>
            <div>
                <label for="experience" class="block text-sm font-medium text-gray-700">Experience</label>
                <textarea id="experience" name="experience" rows="3" class="mt-1 block w-full p-2 border border-gray-300 rounded-lg"></textarea>
            </div>
            <div>
                <label for="resume" class="block text-sm font-medium text-gray-700">Resume</label>
                <input type="file" id="resume" name="resume" accept=".pdf,.doc,.docx" class="mt-1 block w-full p-2 border border-gray-300 rounded-lg">
            </div>
            <div>
                <label for="linkedin" class="block text-sm font-medium text-gray-700">LinkedIn Profile</label>
                <input type="url" id="linkedin" name="linkedin" class="mt-1 block w-full p-2 border border-gray-300 rounded-lg">
            </div>
            <div>
                <label for="projects" class="block text-sm font-medium text-gray-700">Projects Link</label>
                <input type="url" id="projects" name="projects" class="mt-1 block w-full p-2 border border-gray-300 rounded-lg">
            </div>
            <div class="flex justify-end space-x-4">
                <button type="button" onclick="closeModal()" class="bg-gray-500 text-white px-4 py-2 rounded-full hover:bg-gray-600">Cancel</button>
                <button type="submit" class="bg-blue-500 text-white px-4 py-2 rounded-full hover:bg-blue-600">Submit Application</button>
            </div>
        </form>
    </div>
</div>

<script>
function getCookie(name) {
    let cookieValue = null;
    if (document.cookie && document.cookie !== '') {
        const cookies = document.cookie.split(';');
        for (let i = 0; i < cookies.length; i++) {
            const cookie = cookies[i].trim();
            if (cookie.substring(0, name.length + 1) === (name + '=')) {
                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));
                break;
            }
        }
    }
    return cookieValue;
}

function openModal(internshipId) {
    const modal = document.getElementById('applyModal');
    const form = document.getElementById('applyForm');
    const internshipIdField = document.getElementById('internship_id');

    internshipIdField.value = internshipId;
    form.action = "{% url 'app_fyp:apply_internship' 0 %}".replace('0', internshipId);

    // Pre-fill form with profile data
    fetch("{% url 'user_auth:get_profile' %}", {
        method: 'GET',
        headers: {
            'X-CSRFToken': getCookie('csrftoken'),
        },
    })
    .then(response => {
        if (!response.ok) {
            throw new Error('Not authenticated or profile not found');
        }
        return response.json();
    })
    .then(data => {
        document.getElementById('full_name').value = data.full_name || '';
        document.getElementById('email').value = data.email || '';
        document.getElementById('skills').value = data.skills || '';
        document.getElementById('experience').value = data.experience || '';
        document.getElementById('linkedin').value = data.linkedin || '';
        document.getElementById('projects').value = data.projects || '';
    })
    .catch(error => {
        console.error('Error fetching profile:', error);
        alert('Please log in or complete your profile to apply.');
        closeModal();
    });

    modal.classList.remove('hidden');
}

function closeModal() {
    document.getElementById('applyModal').classList.add('hidden');
}
</script>
{% endblock %}/* styles.css */
@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
    --primary-blue: #2563EB;
    --primary-green: #16A34A;
    --primary-purple: #9333EA;
    --primary-orange: #F97316;
    --gradient-hero: linear-gradient(135deg, #2563EB 0%, #16A34A 50%, #9333EA 100%);
    --shadow-soft: 0 4px 12px rgba(0, 0, 0, 0.06);
    --shadow-hover: 0 6px 20px rgba(37, 99, 235, 0.15);
    --transition-ease: cubic-bezier(0.4, 0, 0.2, 1);
    --border-radius: 1rem;
}

/* Reset and Base */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    scroll-behavior: smooth;
}

body {
    font-family: 'Inter', sans-serif;
    background: #F9FAFB;
    overflow-x: hidden;
    -webkit-font-smoothing: antialiased;
    position: relative;
}

/* Container */
.container {
    @apply mx-auto px-4 max-w-7xl;
}

/* Header and Hero */
.hero-gradient {
    background: var(--gradient-hero);
    -webkit-background-clip: text;
    background-clip: text;
    color: transparent;
    font-size: 3.5rem;
    font-weight: 800;
    transform: translateZ(0);
    transition: transform 0.3s var(--transition-ease);
}

header {
    transform: translateY(0);
    opacity: 1;
    transition: opacity 0.3s var(--transition-ease);
}

/* Navigation */
nav {
    background: rgba(31, 41, 55, 0.95);
    border-radius: var(--border-radius);
    box-shadow: var(--shadow-soft);
    transform: translateZ(0);
}

.logo-hover {
    transition: transform 0.3s var(--transition-ease);
}

.logo-hover:hover {
    transform: scale(1.1);
}

/* Stats Section */
.stats-section {
    background: linear-gradient(120deg, #EFF6FF, #F0FDF4);
    border-radius: var(--border-radius);
    padding: 2rem;
}

.stats-grid {
    display: grid;
    gap: 1.5rem;
}

.stat-item {
    transform: translateY(0);
    opacity: 1;
    transition: transform 0.3s var(--transition-ease);
}

.stat-item:hover {
    transform: translateY(-5px);
}

.stat-number {
    font-size: 2.5rem;
    font-weight: 700;
    transition: transform 0.3s var(--transition-ease);
}

.stat-item:hover .stat-number {
    transform: scale(1.05);
}

/* Internship Cards */
.internship-card {
    background: white;
    border-radius: var(--border-radius);
    box-shadow: var(--shadow-soft);
    transform: translateY(0);
    opacity: 1;
    transition: transform 0.3s var(--transition-ease), box-shadow 0.3s var(--transition-ease);
}

.internship-card.visible {
    transform: translateY(0);
    opacity: 1;
}

.internship-card:hover {
    transform: translateY(-5px);
    box-shadow: var(--shadow-hover);
}

.internship-type-badge {
    transition: transform 0.3s var(--transition-ease);
}

.internship-card:hover .internship-type-badge {
    transform: scale(1.05);
}

/* Categories Section */
#categories > div {
    background: white;
    border-radius: var(--border-radius);
    box-shadow: var(--shadow-soft);
    transform: translateY(0);
    opacity: 1;
    transition: transform 0.3s var(--transition-ease), box-shadow 0.3s var(--transition-ease);
}

#categories > div.visible {
    transform: translateY(0);
    opacity: 1;
}

#categories > div:hover {
    transform: translateY(-5px);
    box-shadow: var(--shadow-hover);
}

/* About Section */
#about {
    background: var(--gradient-hero);
    border-radius: var(--border-radius);
    transform: scale(1);
    opacity: 1;
    transition: transform 0.3s var(--transition-ease);
}

#about:hover {
    transform: scale(1.02);
}

/* Testimonials */
.testimonial-card {
    background: white;
    border-radius: var(--border-radius);
    box-shadow: var(--shadow-soft);
    transform: translateY(0);
    opacity: 1;
    transition: transform 0.3s var(--transition-ease), box-shadow 0.3s var(--transition-ease);
}

.testimonial-card.visible {
    transform: translateY(0);
    opacity: 1;
}

.testimonial-card:hover {
    transform: translateY(-5px);
    box-shadow: var(--shadow-hover);
}

/* Modal */
#internship-modal {
    transition: opacity 0.3s var(--transition-ease);
}

#internship-modal:not(.hidden) {
    opacity: 1;
}

#internship-modal.hidden {
    opacity: 0;
    pointer-events: none;
}

#internship-modal .bg-white {
    transform: scale(1);
    opacity: 1;
    transition: transform 0.3s var(--transition-ease), opacity 0.3s var(--transition-ease);
    box-shadow: var(--shadow-soft);
}

#internship-modal:not(.hidden) .bg-white {
    transform: scale(1);
    opacity: 1;
}

/* Ripple Effect */
.ripple {
    position: absolute;
    border-radius: 50%;
    background: rgba(255, 255, 255, 0.4);
    transform: scale(0);
    animation: ripple-animation 0.6s var(--transition-ease);
    pointer-events: none;
}

/* Animations */
@keyframes ripple-animation {
    to { transform: scale(4); opacity: 0; }
}

/* Responsive Design */
@media (max-width: 768px) {
    .hero-gradient {
        font-size: 2.5rem;
    }

    .stats-grid {
        grid-template-columns: repeat(2, 1fr);
    }

    .stat-number {
        font-size: 2rem;
    }

    nav {
        padding: 1rem;
    }
}

@media (max-width: 480px) {
    .hero-gradient {
        font-size: 2rem;
    }

    .stats-grid {
        grid-template-columns: 1fr;
    }

    .stat-number {
        font-size: 1.8rem;
    }
}

/* Performance Optimizations */
.js-loaded .animate-on-load {
    opacity: 1;
    transform: translateY(0);
}

@layer utilities {
    .gpu-accelerated {
        transform: translateZ(0);
    }

    .no-reflow {
        contain: layout paint;
    }
}

/* Stats Section */
.stats-section {
    background: linear-gradient(to right, #EFF6FF, #F0FDF4);
    padding: 32px;
    border-radius: 25%;
}

.stats-grid {
    display: grid;
    gap: 32px;
    text-align: center;
    animation: fadeIn 1s;
}

.stat-number {
    font-size: 1.875rem;
    font-weight: bold;
    animation: bounceIn 0.6s;
}

.stat-blue { color: #2563EB; }
.stat-green { color: #16A34A; }
.stat-purple { color: #9333EA; }
.stat-orange { color: #F97316; }
.stat-label { color: #4B5563; }

/* Testimonial Cards */
.testimonial-card {
    transform: translateY(0);
    transition: transform 0.5s;
    border-radius: 25%;
}

.testimonial-card:hover {
    transform: scale(1.05);
}

/* Buttons */
button {
    padding: 6px 12px;
    font-size: 0.875rem;
    border-radius: 25%;
}

/* Animations */
@keyframes fadeIn {
    from { opacity: 0; }
    to { opacity: 1; }
}

@keyframes bounceIn {
    0%, 20%, 50%, 80%, 100% { transform: translateY(0); }
    40% { transform: translateY(-20px); }
    60% { transform: translateY(-10px); }
}
# app_fyp/models.py
from django.db import models
from django.utils import timezone
from user_auth.models import User  # Import User from user_auth

class Internship(models.Model):
    INTERNSHIP_TYPE_CHOICES = [
        ('paid', 'Paid'),
        ('unpaid', 'Unpaid'),
        ('remote', 'Remote'),
    ]

    title = models.CharField(max_length=100)
    company = models.CharField(max_length=100)
    stack = models.CharField(max_length=200)
    location = models.CharField(max_length=100)
    duration = models.CharField(max_length=50)
    stipend = models.CharField(max_length=50, null=True, blank=True)
    description = models.TextField()
    internship_type = models.CharField(max_length=20, choices=INTERNSHIP_TYPE_CHOICES)
    created_at = models.DateTimeField(default=timezone.now)

    class Meta:
        db_table = 'internships'
        indexes = [
            models.Index(fields=['title', 'company']),
        ]

    def __str__(self):
        return f"{self.title} - {self.company}"

# app_fyp/models.py (partial)
class InternshipApplication(models.Model):
    APPLICATION_STATUS_CHOICES = [
        ('SUBMITTED', 'Submitted'),
        ('UNDER_REVIEW', 'Under Review'),
        ('ACCEPTED', 'Accepted'),
        ('REJECTED', 'Rejected'),
    ]

    user = models.ForeignKey('user_auth.User', on_delete=models.CASCADE, related_name='applications')
    internship = models.ForeignKey(Internship, on_delete=models.CASCADE, related_name='applications')
    full_name = models.CharField(max_length=100)
    email = models.EmailField()
    skills = models.TextField()
    experience = models.TextField(null=True, blank=True)
    resume = models.FileField(upload_to='applications/resumes/', null=True, blank=True)
    linkedin = models.URLField(null=True, blank=True)
    projects = models.TextField(null=True, blank=True)
    status = models.CharField(max_length=20, choices=APPLICATION_STATUS_CHOICES, default='SUBMITTED')
    applied_at = models.DateTimeField(default=timezone.now)

    class Meta:
        db_table = 'internship_applications'
        unique_together = ('user', 'internship')
        indexes = [
            models.Index(fields=['user', 'status']),
        ]

    def __str__(self):
        return f"{self.user.username} - {self.internship.title}"# app_fyp/urls.py
from django.urls import path
from . import views

app_name = 'app_fyp'

urlpatterns = [
    path('', views.index, name='index'),
    path('about/', views.about, name='about'),
    path('contact/', views.contact, name='contact'),
    path('internships/paid/', views.paid_internships, name='paid_internships'),
    path('internships/unpaid/', views.unpaid_internships, name='unpaid_internships'),
    path('internships/remote/', views.remote_internships, name='remote_internships'),
    path('internships/', views.internships_placeholder, name='internships'),
    path('apply/<int:internship_id>/', views.apply_internship, name='apply_internship'),
    path('internship/<int:internship_id>/details/', views.internship_details, name='internship_details'),  # New URL
]# app_fyp/views.py
from django.shortcuts import render, redirect, get_object_or_404
from django.contrib.auth.decorators import login_required
from django.contrib import messages
from django.db.models import Q
from .models import Internship, InternshipApplication
from user_auth.models import UserProfile
from django.utils import timezone
from django.http import JsonResponse

def index(request):
    query = request.GET.get('q', '')
    type_filter = request.GET.get('type', '')
    duration_filter = request.GET.get('duration', '')
    location_filter = request.GET.get('location', '')

    internships = Internship.objects.all()

    if query:
        internships = internships.filter(
            Q(title__icontains=query) |
            Q(company__icontains=query) |
            Q(location__icontains=query)
        )
    if type_filter:
        internships = internships.filter(internship_type=type_filter)
    if duration_filter:
        internships = internships.filter(duration=duration_filter)
    if location_filter:
        # Assuming 'location' field contains 'remote' or 'onsite'-like terms; adjust if using a different field
        internships = internships.filter(location__icontains=location_filter)

    # Stats
    total_opportunities = Internship.objects.count()
    paid_count = Internship.objects.filter(internship_type='paid').count()
    unpaid_count = Internship.objects.filter(internship_type='unpaid').count()
    remote_count = Internship.objects.filter(internship_type='remote').count()
    partner_companies = Internship.objects.values('company').distinct().count()

    context = {
        'internships': internships,
        'query': query,
        'total_opportunities': total_opportunities,
        'paid_count': paid_count,
        'unpaid_count': unpaid_count,
        'remote_count': remote_count,
        'partner_companies': partner_companies,
        'user': request.user,
    }
    return render(request, 'index.html', context)
@login_required
def apply_internship(request, internship_id):
    internship = get_object_or_404(Internship, id=internship_id)
    user = request.user

    # Check if user has already applied
    if InternshipApplication.objects.filter(user=user, internship=internship).exists():
        messages.warning(request, "You have already applied for this internship.")
        return redirect('app_fyp:index')

    # Get user profile
    try:
        profile = user.profile
    except UserProfile.DoesNotExist:
        messages.error(request, "Please complete your profile before applying.")
        return redirect('user_auth:signup')  # Adjust to your profile creation URL

    if request.method == 'POST':
        full_name = request.POST.get('full_name', profile.full_name).strip()
        email = request.POST.get('email', profile.email).strip()
        skills = request.POST.get('skills', profile.skills).strip()
        experience = request.POST.get('experience', profile.experience).strip()
        resume = request.FILES.get('resume', profile.resume)
        linkedin = request.POST.get('linkedin', profile.linkedin).strip()
        projects = request.POST.get('projects', profile.projects).strip()

        # Validation
        if not all([full_name, email, skills]):
            messages.error(request, "Full name, email, and skills are required.")
            return render(request, 'apply_internship.html', {
                'internship': internship,
                'profile': profile,
            })

        # Update profile if changes are made
        profile.full_name = full_name
        profile.email = email
        profile.skills = skills
        profile.experience = experience
        if resume and resume != profile.resume:
            profile.resume = resume
        profile.linkedin = linkedin
        profile.projects = projects
        profile.updated_at = timezone.now()
        profile.save()

        # Create application
        application = InternshipApplication(
            user=user,  # Use ForeignKey instead of username
            internship=internship,
            full_name=full_name,
            email=email,
            skills=skills,
            experience=experience,
            resume=profile.resume,
            linkedin=linkedin,
            projects=projects,
        )
        application.save()

        messages.success(request, f"Application submitted for {internship.title}!")
        return redirect('app_fyp:index')

    return render(request, 'apply_internship.html', {
        'internship': internship,
        'profile': profile,
    })

def about(request):
    return render(request, 'about.html', {'user': request.user})

def remote_internships(request):
    internships = Internship.objects.filter(internship_type='remote')
    context = {'internships': internships, 'user': request.user}
    return render(request, 'remote_internships.html', context)

def internships_placeholder(request):
    paid_count = Internship.objects.filter(internship_type='paid').count()
    unpaid_count = Internship.objects.filter(internship_type='unpaid').count()
    remote_count = Internship.objects.filter(internship_type='remote').count()
    context = {
        'paid_count': paid_count,
        'unpaid_count': unpaid_count,
        'remote_count': remote_count,
        'user': request.user,
    }
    return render(request, 'internships_placeholder.html', context)

def contact(request):
    if request.method == 'POST':
        name = request.POST.get('name')
        email = request.POST.get('email')
        message = request.POST.get('message')
        if name and email and message:
            # Assuming ContactMessage model exists; if not, remove or implement it
            # ContactMessage.objects.create(name=name, email=email, message=message)
            messages.success(request, 'Your message has been sent successfully!')
            return redirect('app_fyp:contact')
        else:
            messages.error(request, 'Please fill out all fields.')
    return render(request, 'contact.html', {'user': request.user})

def paid_internships(request):
    internships = Internship.objects.filter(internship_type='paid')
    context = {'internships': internships, 'user': request.user}
    return render(request, 'paid_internships.html', context)

def unpaid_internships(request):
    internships = Internship.objects.filter(internship_type='unpaid')
    context = {'internships': internships, 'user': request.user}
    return render(request, 'unpaid_internships.html', context)
def internship_details(request, internship_id):
    if request.headers.get('X-Requested-With') != 'XMLHttpRequest':
        return JsonResponse({'error': 'Invalid request'}, status=400)

    internship = get_object_or_404(Internship, id=internship_id)
    data = {
        'title': internship.title,
        'company': internship.company,
        'location': internship.location,
        'duration': internship.duration,
        'stack': internship.stack,
        'description': internship.description,
        'stipend': internship.stipend if internship.stipend else None,
    }
    return JsonResponse(data)from django.contrib import admin
from django.urls import path, include
from django.conf import settings
from django.conf.urls.static import static

urlpatterns = [
    path('admin/', admin.site.urls),
    path('', include('app_fyp.urls', namespace='app_fyp')),
    path('auth/', include('user_auth.urls', namespace='user_auth')),
] + static(settings.MEDIA_URL, document_root=settings.MEDIA_ROOT)        'HOST': 'localhost',
        'PORT': '5432',
    }
}


# Authentication Backends (using Django's default ORM backend)
AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',  # Default Django backend
]

# REST Framework and JWT Configuration
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ),
}

SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=60),
    'REFRESH_TOKEN_LIFETIME': timedelta(days=1),
    'ROTATE_REFRESH_TOKENS': False,
    'BLACKLIST_AFTER_ROTATION': False,
    'AUTH_HEADER_TYPES': ('Bearer',),
}

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]
# settings.py
AUTH_USER_MODEL = 'user_auth.User'

# Internationalization
LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_TZ = True

STATIC_URL = '/static/'
STATICFILES_DIRS = [

    BASE_DIR / 'app_fyp' / 'static',
]
STATIC_ROOT = BASE_DIR / 'staticfiles'

MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'        'HOST': 'localhost',
        'PORT': '5432',
    },
    'user_auth': {  # Updated database name to 'user_auth'
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'user_auth',  # Database for authentication
        'USER': 'postgres', 
DEBUG = True

ALLOWED_HOSTS = ['localhost', '127.0.0.1']

# Application definition
INSTALLED_APPS = [
    'rest_framework',
    'app_fyp.apps.AppFypConfig',
    'user_auth.apps.UserAuthConfig',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'project_fyp.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

MESSAGE_TAGS = {
    messages.SUCCESS: 'bg-green-500 text-white p-4 rounded',
    messages.ERROR: 'bg-red-500 text-white p-4 rounded',
}

WSGI_APPLICATION = 'project_fyp.wsgi.application'

DATABASE_ROUTERS = ['project_fyp.dbrouters.DatabaseRouter']
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'internships_list',
        'USER': 'postgres',from datetime import timedelta
from pathlib import Path
from django.contrib import messages

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
from django.contrib import admin
from django.urls import path, include
from django.conf import settings
from django.conf.urls.static import static

urlpatterns = [
    path('admin/', admin.site.urls),
    path('', include('app_fyp.urls', namespace='app_fyp')),
    path('auth/', include('user_auth.urls', namespace='user_auth')),
] + static(settings.MEDIA_URL, document_root=settings.MEDIA_ROOT)from django.apps import AppConfig


class UserAuthConfig(AppConfig):
    default_auto_field = 'django.db.models.BigAutoField'
    name = 'user_auth'
# user_auth/models.py
from django.db import models
from django.utils import timezone
from django.contrib.auth.models import AbstractBaseUser, BaseUserManager, PermissionsMixin
from django.contrib.auth.hashers import make_password, check_password

class UserManager(BaseUserManager):
    def create_user(self, username, email, password=None, **extra_fields):
        if not username:
            raise ValueError('The Username field must be set')
        if not email:
            raise ValueError('The Email field must be set')
        email = self.normalize_email(email)
        user = self.model(username=username, email=email, **extra_fields)
        if password:  # Only set password if provided
            user.set_password(password)
        user.save(using=self._db)  # Initial save happens here
        return user

    def create_superuser(self, username, email, password=None, **extra_fields):
        extra_fields.setdefault('is_staff', True)
        extra_fields.setdefault('is_superuser', True)
        if extra_fields.get('is_staff') is not True:
            raise ValueError('Superuser must have is_staff=True.')
        if extra_fields.get('is_superuser') is not True:
            raise ValueError('Superuser must have is_superuser=True.')
        return self.create_user(username, email, password, **extra_fields)

class User(AbstractBaseUser, PermissionsMixin):
    id = models.BigAutoField(primary_key=True)
    username = models.CharField(max_length=150, unique=True)
    email = models.EmailField(unique=True)
    created_at = models.DateTimeField(default=timezone.now)
    is_active = models.BooleanField(default=True)
    is_staff = models.BooleanField(default=False)

    objects = UserManager()

    USERNAME_FIELD = 'username'
    REQUIRED_FIELDS = ['email']

    class Meta:
        db_table = 'user_auth'

    def set_password(self, raw_password):
        self.password = make_password(raw_password)
        # Only use update_fields if the object already exists in the database
        if self.pk is not None:
            self.save(update_fields=['password'])
        # If pk is None, the initial save will handle it (called in create_user)

    def check_password(self, raw_password):
        return check_password(raw_password, self.password)

    def __str__(self):
        return self.username

class UserProfile(models.Model):
    id = models.BigAutoField(primary_key=True)
    user = models.OneToOneField(User, on_delete=models.CASCADE, related_name='profile')
    full_name = models.CharField(max_length=100)
    email = models.EmailField(unique=True)
    skills = models.TextField()
    experience = models.TextField(null=True, blank=True)
    resume = models.FileField(upload_to='resumes/', null=True, blank=True)
    linkedin = models.URLField(null=True, blank=True)
    projects = models.TextField(null=True, blank=True)
    created_at = models.DateTimeField(default=timezone.now)
    updated_at = models.DateTimeField(auto_now=True)

    class Meta:
        db_table = 'user_profiles'
        indexes = [
            models.Index(fields=['user', 'email']),
        ]

    def __str__(self):
        return self.full_namefrom django.urls import path
from . import views

app_name = 'user_auth'

urlpatterns = [
    path('signup/', views.SignupView.as_view(), name='signup'),
    path('login/', views.LoginView.as_view(), name='login'),
    path('logout/', views.LogoutView.as_view(), name='logout'),
    path('get_profile/', views.GetProfileView.as_view(), name='get_profile'),
    path('media/resumes/<str:grid_id>/', views.serve_resume, name='serve_resume'),
]from django.shortcuts import render, HttpResponseRedirect, redirect
from django.contrib import messages
from django.http import HttpResponse
from rest_framework.views import APIView
from rest_framework.response import Response
from rest_framework import status
from rest_framework.permissions import IsAuthenticated
from rest_framework_simplejwt.authentication import JWTAuthentication
from rest_framework_simplejwt.tokens import RefreshToken
from user_auth.models import User, UserProfile
from django.contrib.auth import authenticate, login, logout

def serve_resume(request, user_id):
    """Serve a resume file from the filesystem."""
    try:
        profile = UserProfile.objects.get(user_id=user_id)
        if profile.resume:
            with profile.resume.open('rb') as resume_file:
                return HttpResponse(resume_file.read(), content_type=profile.resume.file.content_type)
        return HttpResponse("File not found", status=404)
    except UserProfile.DoesNotExist:
        return HttpResponse("File not found", status=404)

class SignupView(APIView):
    permission_classes = []
    def get(self, request):
        return render(request, 'signup.html')

    def post(self, request):
        full_name = request.POST.get('full_name')
        email = request.POST.get('email')
        password = request.POST.get('password')
        confirm_password = request.POST.get('confirm_password')
        skills = request.POST.get('skills')
        experience = request.POST.get('experience', '')
        resume = request.FILES.get('resume')
        linkedin = request.POST.get('linkedin', '')
        projects = request.POST.get('projects', '')

        if not all([full_name, email, password, confirm_password, skills]):
            messages.error(request, 'Please fill out all required fields.')
            return HttpResponseRedirect(request.path)

        if password != confirm_password:
            messages.error(request, 'Passwords do not match.')
            return HttpResponseRedirect(request.path)

        if User.objects.filter(username=email).exists() or User.objects.filter(email=email).exists():
            messages.error(request, 'Email already exists.')
            return HttpResponseRedirect(request.path)

        try:
            user = User(username=email, email=email)
            user.set_password(password)
            user.save()
        except Exception as e:
            messages.error(request, f'Error creating user: {str(e)}')
            return HttpResponseRedirect(request.path)

        try:
            profile = UserProfile(
                user=user,
                full_name=full_name,
                email=email,
                skills=skills,
                experience=experience,
                linkedin=linkedin,
                projects=projects
            )
            if resume:
                profile.resume = resume
            profile.save()
        except Exception as e:
            messages.error(request, f'Error saving profile: {str(e)}')
            user.delete()
            return HttpResponseRedirect(request.path)

        messages.success(request, 'Account created successfully! Please log in.')
        return redirect('user_auth:login')

class LoginView(APIView):
    def get(self, request):
        return render(request, 'login.html')

    def post(self, request):
        email = request.POST.get('email')
        password = request.POST.get('password')
        user = authenticate(request, username=email, password=password)
        if user is not None:
            login(request, user)  # Log the user in with session-based auth
            messages.success(request, 'Login successful!')
            return redirect('app_fyp:index')  # Redirect to index page
        messages.error(request, 'Invalid email or password.')
        return redirect('user_auth:login')

class LogoutView(APIView):
    def post(self, request):
        logout(request)  # Log the user out
        messages.success(request, 'You have been logged out successfully.')
        return redirect('user_auth:login')

class GetProfileView(APIView):
    authentication_classes = [JWTAuthentication]
    permission_classes = [IsAuthenticated]

    def get(self, request):
        try:
            profile = UserProfile.objects.get(user=request.user)
            resume_url = profile.resume.url if profile.resume else ''
            return Response({
                'full_name': profile.full_name,
                'email': profile.email,
                'skills': profile.skills,
                'experience': profile.experience,
                'resume': resume_url,
                'linkedin': profile.linkedin
            })
        except UserProfile.DoesNotExist:
            return Response({'error': 'Profile not found'}, status=status.HTTP_404_NOT_FOUND)
        except Exception as e:
            return Response({'error': str(e)}, status=status.HTTP_500_INTERNAL_SERVER_ERROR)